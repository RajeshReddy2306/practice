import java.util.*;

 class steque
 {
	LinkedList<Integer> ll=new LinkedList<Integer>();
	

	 void push(int data) 
	 {
	   ll.add(data);
	}

	  void pop() 
	{
	   ll.remove();
	}
	public void enqueue(int data)
	{
		
		ll.addLast(data);
	}
	public String display()
	{

		if (ll.isEmpty())
		{
		System.out.println("enqueue i sempty");
		}
		else
		{
			String st = "[" + ll.get(0);
			for (int i = 1; i < ll.size(); i++) 
			{
				st = st + ", " + ll.get(i);
			}
			st = st + "]";
			
			return st;
	}
 }
 }
 class Solution 
 {
	 public static void main(String args[])
	 {
		// TODO Auto-generated method stub
			int n, i, data;
			String s;
			Scanner scan = new Scanner(System.in);
			n = scan.nextInt();
			steque st = new steque();
			while (scan.hasNext())
			{
				s = scan.nextLine();
			
				String[] s1 = s.split(" ");
				//int s2=Integer.parseInt(s1[0]);
				
				switch (s1[0]) 
				{
				
				case "push":
					data = Integer.parseInt(s1[1]);
					st.push(data);
					System.out.println(st.ll);
					break;
				case "enqueue":
					data = Integer.parseInt(s1[1]);
					st.enqueue(data);
					System.out.println(st.ll);
					break;
				case "pop":
					st.pop();
					System.out.println(st.display());
					break;
				
				}
			}	}
	 }
		